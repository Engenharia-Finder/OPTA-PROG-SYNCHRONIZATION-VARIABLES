/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/7fe99baf-e042-457b-9c6f-d67a8a888f7f 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float iniciado;
  CloudLight btn1;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

int estadoentrada1 = 0;
double contagem = 3.928;
bool conmuta = true;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  ArduinoCloud.addCallback(ArduinoIoTCloudEvent::SYNC, doThisOnSync);
  ArduinoCloud.addCallback(ArduinoIoTCloudEvent::DISCONNECT, doThisOnDisconnect);

  pinMode(A0, INPUT);
  pinMode(D0, OUTPUT);
  pinMode(LED_D0, OUTPUT);

  
}

void loop() {
  
  
  ArduinoCloud.update();
  // Your code here 

  estadoentrada1 = digitalRead(A0);
  if(estadoentrada1 == HIGH) {                           
      delay(5); 
      if (conmuta) { 
        Serial.print("Consumo kWh:  ");
        Serial.println(contagem);                                        
        contagem = contagem + 0.002; 
        iniciado = contagem;
        conmuta = false;                                    
      }
    }
    else {
      conmuta = true;                                       
    }

  if(btn1 == HIGH){
    digitalWrite(D0, HIGH);
    digitalWrite(LED_D0, HIGH);
  }else{
    digitalWrite(D0, LOW);
    digitalWrite(LED_D0, LOW);
  }
  
  
}

void doThisOnSync(){
  contagem = iniciado;
  Serial.println(contagem);
}

void doThisOnDisconnect(){
  Serial.println("OPTA está desconectado");
  if (ArduinoCloud.connected() == 0){
    disconnectAfter();
    while (false);
  }
  
}


void disconnectAfter(){
  
  Serial.println("Entrando na rotina offline");
      estadoentrada1 = digitalRead(A0);
      if(estadoentrada1 == HIGH) {                           
      delay(5); 
      if (conmuta) { 
        Serial.print("Consumo kWh:  ");
        Serial.println(contagem);                                        
        contagem = contagem + 0.002; 
        iniciado = contagem;
        conmuta = false;                                    
      }
    }
    else {
      conmuta = true;                                       
    }
}


/*
  Since Contagem is READ_WRITE variable, onContagemChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onContagemChange()  {
  // Add your code here to act upon Contagem change
}


/*
  Since Btn1 is READ_WRITE variable, onBtn1Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onBtn1Change()  {
  // Add your code here to act upon Btn1 change
}

/*
  Since Iniciado is READ_WRITE variable, onIniciadoChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onIniciadoChange()  {
  // Add your code here to act upon Iniciado change
}
